from PIL import Image

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–µ–ª–∏–∫–æ–≥–æ —Å–ø—Ä–∞–π—Ç-–ª–∏—Å—Ç–∞
image = Image.open("player2.png").convert("RGBA")

cols, rows = 4, 2
frame_width = image.width // cols
frame_height = image.height // rows
target_size = (128, 128)

frame_num = 0
for row in range(rows):
    for col in range(cols):
        # –û–±—Ä—ñ–∑–∞—î–º–æ –æ–¥–∏–Ω –≤–µ–ª–∏–∫–∏–π –∫–∞–¥—Ä
        left = col * frame_width
        upper = row * frame_height
        right = left + frame_width
        lower = upper + frame_height
        big_frame = image.crop((left, upper, right, lower))

        # üîß –ú–∞—Å—à—Ç–∞–±—É—î–º–æ –∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º –ø—Ä–æ–ø–æ—Ä—Ü—ñ–π
        scale = min(target_size[0] / big_frame.width, target_size[1] / big_frame.height)
        new_size = (int(big_frame.width * scale), int(big_frame.height * scale))
        scaled = big_frame.resize(new_size, resample=Image.BICUBIC)

        # üî≤ –í—Å—Ç–∞–≤–ª—è—î–º–æ –≤ —Ü–µ–Ω—Ç—Ä –ø—Ä–æ–∑–æ—Ä–æ–≥–æ 128√ó128 –∫–∞–¥—Ä—É
        result = Image.new("RGBA", target_size, (255, 255, 255, 0))
        offset_x = (target_size[0] - new_size[0]) // 2
        offset_y = (target_size[1] - new_size[1]) // 2
        result.paste(scaled, (offset_x, offset_y))

        result.save(f"frame_{frame_num:02}.png")
        frame_num += 1